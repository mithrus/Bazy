#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BazyDanych
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReklamaDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKlient(Klient instance);
    partial void UpdateKlient(Klient instance);
    partial void DeleteKlient(Klient instance);
    partial void InsertPracownik(Pracownik instance);
    partial void UpdatePracownik(Pracownik instance);
    partial void DeletePracownik(Pracownik instance);
    partial void InsertBranza(Branza instance);
    partial void UpdateBranza(Branza instance);
    partial void DeleteBranza(Branza instance);
    partial void InsertFaktura(Faktura instance);
    partial void UpdateFaktura(Faktura instance);
    partial void DeleteFaktura(Faktura instance);
    partial void InsertPracownikWSkladzie(PracownikWSkladzie instance);
    partial void UpdatePracownikWSkladzie(PracownikWSkladzie instance);
    partial void DeletePracownikWSkladzie(PracownikWSkladzie instance);
    partial void InsertRealizacjaWLokalizacji(RealizacjaWLokalizacji instance);
    partial void UpdateRealizacjaWLokalizacji(RealizacjaWLokalizacji instance);
    partial void DeleteRealizacjaWLokalizacji(RealizacjaWLokalizacji instance);
    partial void InsertReklamacja(Reklamacja instance);
    partial void UpdateReklamacja(Reklamacja instance);
    partial void DeleteReklamacja(Reklamacja instance);
    partial void InsertSklad(Sklad instance);
    partial void UpdateSklad(Sklad instance);
    partial void DeleteSklad(Sklad instance);
    partial void InsertZespol(Zespol instance);
    partial void UpdateZespol(Zespol instance);
    partial void DeleteZespol(Zespol instance);
    partial void InsertZleceniaNaFakturze(ZleceniaNaFakturze instance);
    partial void UpdateZleceniaNaFakturze(ZleceniaNaFakturze instance);
    partial void DeleteZleceniaNaFakturze(ZleceniaNaFakturze instance);
    partial void InsertZlecenie(Zlecenie instance);
    partial void UpdateZlecenie(Zlecenie instance);
    partial void DeleteZlecenie(Zlecenie instance);
    partial void InsertRealizacja(Realizacja instance);
    partial void UpdateRealizacja(Realizacja instance);
    partial void DeleteRealizacja(Realizacja instance);
    partial void InsertLokalizacja(Lokalizacja instance);
    partial void UpdateLokalizacja(Lokalizacja instance);
    partial void DeleteLokalizacja(Lokalizacja instance);
    partial void InsertReklama(Reklama instance);
    partial void UpdateReklama(Reklama instance);
    partial void DeleteReklama(Reklama instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::BazyDanych.Properties.Settings.Default.ReklamaDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Klient> Klients
		{
			get
			{
				return this.GetTable<Klient>();
			}
		}
		
		public System.Data.Linq.Table<Pracownik> Pracowniks
		{
			get
			{
				return this.GetTable<Pracownik>();
			}
		}
		
		public System.Data.Linq.Table<Bilboard> Bilboards
		{
			get
			{
				return this.GetTable<Bilboard>();
			}
		}
		
		public System.Data.Linq.Table<Branza> Branzas
		{
			get
			{
				return this.GetTable<Branza>();
			}
		}
		
		public System.Data.Linq.Table<Budynek> Budyneks
		{
			get
			{
				return this.GetTable<Budynek>();
			}
		}
		
		public System.Data.Linq.Table<Faktura> Fakturas
		{
			get
			{
				return this.GetTable<Faktura>();
			}
		}
		
		public System.Data.Linq.Table<Ogordzenie> Ogordzenies
		{
			get
			{
				return this.GetTable<Ogordzenie>();
			}
		}
		
		public System.Data.Linq.Table<PracownikWSkladzie> PracownikWSkladzies
		{
			get
			{
				return this.GetTable<PracownikWSkladzie>();
			}
		}
		
		public System.Data.Linq.Table<RealizacjaWLokalizacji> RealizacjaWLokalizacjis
		{
			get
			{
				return this.GetTable<RealizacjaWLokalizacji>();
			}
		}
		
		public System.Data.Linq.Table<Reklamacja> Reklamacjas
		{
			get
			{
				return this.GetTable<Reklamacja>();
			}
		}
		
		public System.Data.Linq.Table<ReklamaZBranzy> ReklamaZBranzies
		{
			get
			{
				return this.GetTable<ReklamaZBranzy>();
			}
		}
		
		public System.Data.Linq.Table<Sklad> Sklads
		{
			get
			{
				return this.GetTable<Sklad>();
			}
		}
		
		public System.Data.Linq.Table<SlupOgloszeniowy> SlupOgloszeniowies
		{
			get
			{
				return this.GetTable<SlupOgloszeniowy>();
			}
		}
		
		public System.Data.Linq.Table<Tramwaj> Tramwajs
		{
			get
			{
				return this.GetTable<Tramwaj>();
			}
		}
		
		public System.Data.Linq.Table<Zespol> Zespols
		{
			get
			{
				return this.GetTable<Zespol>();
			}
		}
		
		public System.Data.Linq.Table<ZleceniaNaFakturze> ZleceniaNaFakturzes
		{
			get
			{
				return this.GetTable<ZleceniaNaFakturze>();
			}
		}
		
		public System.Data.Linq.Table<Zlecenie> Zlecenies
		{
			get
			{
				return this.GetTable<Zlecenie>();
			}
		}
		
		public System.Data.Linq.Table<Realizacja> Realizacjas
		{
			get
			{
				return this.GetTable<Realizacja>();
			}
		}
		
		public System.Data.Linq.Table<Lokalizacja> Lokalizacjas
		{
			get
			{
				return this.GetTable<Lokalizacja>();
			}
		}
		
		public System.Data.Linq.Table<Reklama> Reklamas
		{
			get
			{
				return this.GetTable<Reklama>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klient")]
	public partial class Klient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KlientID;
		
		private string _NIP;
		
		private string _Nazwa;
		
		private string _Adres;
		
		private EntitySet<Faktura> _Fakturas;
		
		private EntitySet<Reklamacja> _Reklamacjas;
		
		private EntitySet<Zlecenie> _Zlecenies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    partial void OnNIPChanging(string value);
    partial void OnNIPChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    #endregion
		
		public Klient()
		{
			this._Fakturas = new EntitySet<Faktura>(new Action<Faktura>(this.attach_Fakturas), new Action<Faktura>(this.detach_Fakturas));
			this._Reklamacjas = new EntitySet<Reklamacja>(new Action<Reklamacja>(this.attach_Reklamacjas), new Action<Reklamacja>(this.detach_Reklamacjas));
			this._Zlecenies = new EntitySet<Zlecenie>(new Action<Zlecenie>(this.attach_Zlecenies), new Action<Zlecenie>(this.detach_Zlecenies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIP", DbType="VarChar(15)")]
		public string NIP
		{
			get
			{
				return this._NIP;
			}
			set
			{
				if ((this._NIP != value))
				{
					this.OnNIPChanging(value);
					this.SendPropertyChanging();
					this._NIP = value;
					this.SendPropertyChanged("NIP");
					this.OnNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Faktura", Storage="_Fakturas", ThisKey="KlientID", OtherKey="KlientID")]
		public EntitySet<Faktura> Fakturas
		{
			get
			{
				return this._Fakturas;
			}
			set
			{
				this._Fakturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Reklamacja", Storage="_Reklamacjas", ThisKey="KlientID", OtherKey="KlientID")]
		public EntitySet<Reklamacja> Reklamacjas
		{
			get
			{
				return this._Reklamacjas;
			}
			set
			{
				this._Reklamacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zlecenie", Storage="_Zlecenies", ThisKey="KlientID", OtherKey="KlientID")]
		public EntitySet<Zlecenie> Zlecenies
		{
			get
			{
				return this._Zlecenies;
			}
			set
			{
				this._Zlecenies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fakturas(Faktura entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Fakturas(Faktura entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
		
		private void attach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
		
		private void attach_Zlecenies(Zlecenie entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Zlecenies(Zlecenie entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pracownik")]
	public partial class Pracownik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PracownikID;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _Adres;
		
		private string _Stanowisko;
		
		private EntitySet<Faktura> _Fakturas;
		
		private EntitySet<PracownikWSkladzie> _PracownikWSkladzies;
		
		private EntitySet<Reklamacja> _Reklamacjas;
		
		private EntitySet<Zespol> _Zespols;
		
		private EntitySet<Zlecenie> _Zlecenies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnStanowiskoChanging(string value);
    partial void OnStanowiskoChanged();
    #endregion
		
		public Pracownik()
		{
			this._Fakturas = new EntitySet<Faktura>(new Action<Faktura>(this.attach_Fakturas), new Action<Faktura>(this.detach_Fakturas));
			this._PracownikWSkladzies = new EntitySet<PracownikWSkladzie>(new Action<PracownikWSkladzie>(this.attach_PracownikWSkladzies), new Action<PracownikWSkladzie>(this.detach_PracownikWSkladzies));
			this._Reklamacjas = new EntitySet<Reklamacja>(new Action<Reklamacja>(this.attach_Reklamacjas), new Action<Reklamacja>(this.detach_Reklamacjas));
			this._Zespols = new EntitySet<Zespol>(new Action<Zespol>(this.attach_Zespols), new Action<Zespol>(this.detach_Zespols));
			this._Zlecenies = new EntitySet<Zlecenie>(new Action<Zlecenie>(this.attach_Zlecenies), new Action<Zlecenie>(this.detach_Zlecenies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stanowisko", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Stanowisko
		{
			get
			{
				return this._Stanowisko;
			}
			set
			{
				if ((this._Stanowisko != value))
				{
					this.OnStanowiskoChanging(value);
					this.SendPropertyChanging();
					this._Stanowisko = value;
					this.SendPropertyChanged("Stanowisko");
					this.OnStanowiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Faktura", Storage="_Fakturas", ThisKey="PracownikID", OtherKey="PracownikID")]
		public EntitySet<Faktura> Fakturas
		{
			get
			{
				return this._Fakturas;
			}
			set
			{
				this._Fakturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_PracownikWSkladzie", Storage="_PracownikWSkladzies", ThisKey="PracownikID", OtherKey="PracownikID")]
		public EntitySet<PracownikWSkladzie> PracownikWSkladzies
		{
			get
			{
				return this._PracownikWSkladzies;
			}
			set
			{
				this._PracownikWSkladzies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Reklamacja", Storage="_Reklamacjas", ThisKey="PracownikID", OtherKey="PracownikID")]
		public EntitySet<Reklamacja> Reklamacjas
		{
			get
			{
				return this._Reklamacjas;
			}
			set
			{
				this._Reklamacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Zespol", Storage="_Zespols", ThisKey="PracownikID", OtherKey="KierownikID")]
		public EntitySet<Zespol> Zespols
		{
			get
			{
				return this._Zespols;
			}
			set
			{
				this._Zespols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Zlecenie", Storage="_Zlecenies", ThisKey="PracownikID", OtherKey="PracownikID")]
		public EntitySet<Zlecenie> Zlecenies
		{
			get
			{
				return this._Zlecenies;
			}
			set
			{
				this._Zlecenies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fakturas(Faktura entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_Fakturas(Faktura entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
		
		private void attach_PracownikWSkladzies(PracownikWSkladzie entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_PracownikWSkladzies(PracownikWSkladzie entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
		
		private void attach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_Reklamacjas(Reklamacja entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
		
		private void attach_Zespols(Zespol entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_Zespols(Zespol entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
		
		private void attach_Zlecenies(Zlecenie entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = this;
		}
		
		private void detach_Zlecenies(Zlecenie entity)
		{
			this.SendPropertyChanging();
			entity.Pracownik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bilboard")]
	public partial class Bilboard
	{
		
		private int _LokalizacjaID;
		
		private decimal _SzerokoscGeograficzna;
		
		private decimal _DlugoscGeograficzna;
		
		private System.Nullable<int> _IloscReklam;
		
		public Bilboard()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", DbType="Int NOT NULL")]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					this._LokalizacjaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SzerokoscGeograficzna", DbType="Decimal(18,0) NOT NULL")]
		public decimal SzerokoscGeograficzna
		{
			get
			{
				return this._SzerokoscGeograficzna;
			}
			set
			{
				if ((this._SzerokoscGeograficzna != value))
				{
					this._SzerokoscGeograficzna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlugoscGeograficzna", DbType="Decimal(18,0) NOT NULL")]
		public decimal DlugoscGeograficzna
		{
			get
			{
				return this._DlugoscGeograficzna;
			}
			set
			{
				if ((this._DlugoscGeograficzna != value))
				{
					this._DlugoscGeograficzna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IloscReklam", DbType="Int")]
		public System.Nullable<int> IloscReklam
		{
			get
			{
				return this._IloscReklam;
			}
			set
			{
				if ((this._IloscReklam != value))
				{
					this._IloscReklam = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branza")]
	public partial class Branza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranzaID;
		
		private string _Nazwa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranzaIDChanging(int value);
    partial void OnBranzaIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Branza()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranzaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BranzaID
		{
			get
			{
				return this._BranzaID;
			}
			set
			{
				if ((this._BranzaID != value))
				{
					this.OnBranzaIDChanging(value);
					this.SendPropertyChanging();
					this._BranzaID = value;
					this.SendPropertyChanged("BranzaID");
					this.OnBranzaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budynek")]
	public partial class Budynek
	{
		
		private int _LokalizacjaID;
		
		private string _Adres;
		
		public Budynek()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", DbType="Int NOT NULL")]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					this._LokalizacjaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this._Adres = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faktura")]
	public partial class Faktura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FakturaID;
		
		private string _NumerFaktury;
		
		private System.DateTime _DataWystawienia;
		
		private System.DateTime _DataSprzedazy;
		
		private System.DateTime _TerminPlatnosci;
		
		private bool _Zaplacona;
		
		private int _KlientID;
		
		private int _PracownikID;
		
		private string _SposobPlatnosci;
		
		private EntitySet<ZleceniaNaFakturze> _ZleceniaNaFakturzes;
		
		private EntityRef<Klient> _Klient;
		
		private EntityRef<Pracownik> _Pracownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFakturaIDChanging(int value);
    partial void OnFakturaIDChanged();
    partial void OnNumerFakturyChanging(string value);
    partial void OnNumerFakturyChanged();
    partial void OnDataWystawieniaChanging(System.DateTime value);
    partial void OnDataWystawieniaChanged();
    partial void OnDataSprzedazyChanging(System.DateTime value);
    partial void OnDataSprzedazyChanged();
    partial void OnTerminPlatnosciChanging(System.DateTime value);
    partial void OnTerminPlatnosciChanged();
    partial void OnZaplaconaChanging(bool value);
    partial void OnZaplaconaChanged();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnSposobPlatnosciChanging(string value);
    partial void OnSposobPlatnosciChanged();
    #endregion
		
		public Faktura()
		{
			this._ZleceniaNaFakturzes = new EntitySet<ZleceniaNaFakturze>(new Action<ZleceniaNaFakturze>(this.attach_ZleceniaNaFakturzes), new Action<ZleceniaNaFakturze>(this.detach_ZleceniaNaFakturzes));
			this._Klient = default(EntityRef<Klient>);
			this._Pracownik = default(EntityRef<Pracownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FakturaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FakturaID
		{
			get
			{
				return this._FakturaID;
			}
			set
			{
				if ((this._FakturaID != value))
				{
					this.OnFakturaIDChanging(value);
					this.SendPropertyChanging();
					this._FakturaID = value;
					this.SendPropertyChanged("FakturaID");
					this.OnFakturaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this.OnNumerFakturyChanging(value);
					this.SendPropertyChanging();
					this._NumerFaktury = value;
					this.SendPropertyChanged("NumerFaktury");
					this.OnNumerFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataWystawienia", DbType="Date NOT NULL")]
		public System.DateTime DataWystawienia
		{
			get
			{
				return this._DataWystawienia;
			}
			set
			{
				if ((this._DataWystawienia != value))
				{
					this.OnDataWystawieniaChanging(value);
					this.SendPropertyChanging();
					this._DataWystawienia = value;
					this.SendPropertyChanged("DataWystawienia");
					this.OnDataWystawieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSprzedazy", DbType="Date NOT NULL")]
		public System.DateTime DataSprzedazy
		{
			get
			{
				return this._DataSprzedazy;
			}
			set
			{
				if ((this._DataSprzedazy != value))
				{
					this.OnDataSprzedazyChanging(value);
					this.SendPropertyChanging();
					this._DataSprzedazy = value;
					this.SendPropertyChanged("DataSprzedazy");
					this.OnDataSprzedazyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPlatnosci", DbType="Date NOT NULL")]
		public System.DateTime TerminPlatnosci
		{
			get
			{
				return this._TerminPlatnosci;
			}
			set
			{
				if ((this._TerminPlatnosci != value))
				{
					this.OnTerminPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._TerminPlatnosci = value;
					this.SendPropertyChanged("TerminPlatnosci");
					this.OnTerminPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zaplacona", DbType="Bit NOT NULL")]
		public bool Zaplacona
		{
			get
			{
				return this._Zaplacona;
			}
			set
			{
				if ((this._Zaplacona != value))
				{
					this.OnZaplaconaChanging(value);
					this.SendPropertyChanging();
					this._Zaplacona = value;
					this.SendPropertyChanged("Zaplacona");
					this.OnZaplaconaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", DbType="Int NOT NULL")]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL")]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SposobPlatnosci", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SposobPlatnosci
		{
			get
			{
				return this._SposobPlatnosci;
			}
			set
			{
				if ((this._SposobPlatnosci != value))
				{
					this.OnSposobPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._SposobPlatnosci = value;
					this.SendPropertyChanged("SposobPlatnosci");
					this.OnSposobPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faktura_ZleceniaNaFakturze", Storage="_ZleceniaNaFakturzes", ThisKey="FakturaID", OtherKey="FakturaID")]
		public EntitySet<ZleceniaNaFakturze> ZleceniaNaFakturzes
		{
			get
			{
				return this._ZleceniaNaFakturzes;
			}
			set
			{
				this._ZleceniaNaFakturzes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Faktura", Storage="_Klient", ThisKey="KlientID", OtherKey="KlientID", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Fakturas.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Fakturas.Add(this);
						this._KlientID = value.KlientID;
					}
					else
					{
						this._KlientID = default(int);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Faktura", Storage="_Pracownik", ThisKey="PracownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.Fakturas.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.Fakturas.Add(this);
						this._PracownikID = value.PracownikID;
					}
					else
					{
						this._PracownikID = default(int);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZleceniaNaFakturzes(ZleceniaNaFakturze entity)
		{
			this.SendPropertyChanging();
			entity.Faktura = this;
		}
		
		private void detach_ZleceniaNaFakturzes(ZleceniaNaFakturze entity)
		{
			this.SendPropertyChanging();
			entity.Faktura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ogordzenie")]
	public partial class Ogordzenie
	{
		
		private int _LokalizacjaID;
		
		private decimal _SzerokoscGeograficzna;
		
		private decimal _DlugoscGeograficzna;
		
		private System.Nullable<int> _IloscReklam;
		
		private string _ulica;
		
		public Ogordzenie()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", DbType="Int NOT NULL")]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					this._LokalizacjaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SzerokoscGeograficzna", DbType="Decimal(18,0) NOT NULL")]
		public decimal SzerokoscGeograficzna
		{
			get
			{
				return this._SzerokoscGeograficzna;
			}
			set
			{
				if ((this._SzerokoscGeograficzna != value))
				{
					this._SzerokoscGeograficzna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlugoscGeograficzna", DbType="Decimal(18,0) NOT NULL")]
		public decimal DlugoscGeograficzna
		{
			get
			{
				return this._DlugoscGeograficzna;
			}
			set
			{
				if ((this._DlugoscGeograficzna != value))
				{
					this._DlugoscGeograficzna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IloscReklam", DbType="Int")]
		public System.Nullable<int> IloscReklam
		{
			get
			{
				return this._IloscReklam;
			}
			set
			{
				if ((this._IloscReklam != value))
				{
					this._IloscReklam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ulica", DbType="VarChar(30)")]
		public string ulica
		{
			get
			{
				return this._ulica;
			}
			set
			{
				if ((this._ulica != value))
				{
					this._ulica = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PracownikWSkladzie")]
	public partial class PracownikWSkladzie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkladID;
		
		private int _PracownikID;
		
		private EntityRef<Pracownik> _Pracownik;
		
		private EntityRef<Sklad> _Sklad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkladIDChanging(int value);
    partial void OnSkladIDChanged();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    #endregion
		
		public PracownikWSkladzie()
		{
			this._Pracownik = default(EntityRef<Pracownik>);
			this._Sklad = default(EntityRef<Sklad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkladID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SkladID
		{
			get
			{
				return this._SkladID;
			}
			set
			{
				if ((this._SkladID != value))
				{
					if (this._Sklad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkladIDChanging(value);
					this.SendPropertyChanging();
					this._SkladID = value;
					this.SendPropertyChanged("SkladID");
					this.OnSkladIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_PracownikWSkladzie", Storage="_Pracownik", ThisKey="PracownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.PracownikWSkladzies.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.PracownikWSkladzies.Add(this);
						this._PracownikID = value.PracownikID;
					}
					else
					{
						this._PracownikID = default(int);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sklad_PracownikWSkladzie", Storage="_Sklad", ThisKey="SkladID", OtherKey="SkladID", IsForeignKey=true)]
		public Sklad Sklad
		{
			get
			{
				return this._Sklad.Entity;
			}
			set
			{
				Sklad previousValue = this._Sklad.Entity;
				if (((previousValue != value) 
							|| (this._Sklad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sklad.Entity = null;
						previousValue.PracownikWSkladzies.Remove(this);
					}
					this._Sklad.Entity = value;
					if ((value != null))
					{
						value.PracownikWSkladzies.Add(this);
						this._SkladID = value.SkladID;
					}
					else
					{
						this._SkladID = default(int);
					}
					this.SendPropertyChanged("Sklad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RealizacjaWLokalizacji")]
	public partial class RealizacjaWLokalizacji : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealizacjaID;
		
		private int _LokalizacjaID;
		
		private EntityRef<Realizacja> _Realizacja;
		
		private EntityRef<Lokalizacja> _Lokalizacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealizacjaIDChanging(int value);
    partial void OnRealizacjaIDChanged();
    partial void OnLokalizacjaIDChanging(int value);
    partial void OnLokalizacjaIDChanged();
    #endregion
		
		public RealizacjaWLokalizacji()
		{
			this._Realizacja = default(EntityRef<Realizacja>);
			this._Lokalizacja = default(EntityRef<Lokalizacja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealizacjaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RealizacjaID
		{
			get
			{
				return this._RealizacjaID;
			}
			set
			{
				if ((this._RealizacjaID != value))
				{
					if (this._Realizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRealizacjaIDChanging(value);
					this.SendPropertyChanging();
					this._RealizacjaID = value;
					this.SendPropertyChanged("RealizacjaID");
					this.OnRealizacjaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					if (this._Lokalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLokalizacjaIDChanging(value);
					this.SendPropertyChanging();
					this._LokalizacjaID = value;
					this.SendPropertyChanged("LokalizacjaID");
					this.OnLokalizacjaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realizacja_RealizacjaWLokalizacji", Storage="_Realizacja", ThisKey="RealizacjaID", OtherKey="RealizacjaID", IsForeignKey=true)]
		public Realizacja Realizacja
		{
			get
			{
				return this._Realizacja.Entity;
			}
			set
			{
				Realizacja previousValue = this._Realizacja.Entity;
				if (((previousValue != value) 
							|| (this._Realizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Realizacja.Entity = null;
						previousValue.RealizacjaWLokalizacjis.Remove(this);
					}
					this._Realizacja.Entity = value;
					if ((value != null))
					{
						value.RealizacjaWLokalizacjis.Add(this);
						this._RealizacjaID = value.RealizacjaID;
					}
					else
					{
						this._RealizacjaID = default(int);
					}
					this.SendPropertyChanged("Realizacja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokalizacja_RealizacjaWLokalizacji", Storage="_Lokalizacja", ThisKey="LokalizacjaID", OtherKey="LokalizacjaID", IsForeignKey=true)]
		public Lokalizacja Lokalizacja
		{
			get
			{
				return this._Lokalizacja.Entity;
			}
			set
			{
				Lokalizacja previousValue = this._Lokalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Lokalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokalizacja.Entity = null;
						previousValue.RealizacjaWLokalizacjis.Remove(this);
					}
					this._Lokalizacja.Entity = value;
					if ((value != null))
					{
						value.RealizacjaWLokalizacjis.Add(this);
						this._LokalizacjaID = value.LokalizacjaID;
					}
					else
					{
						this._LokalizacjaID = default(int);
					}
					this.SendPropertyChanged("Lokalizacja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reklamacja")]
	public partial class Reklamacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReklamacjaID;
		
		private System.DateTime _DataWystawienia;
		
		private string _Tresc;
		
		private int _PracownikID;
		
		private int _KlientID;
		
		private EntityRef<Klient> _Klient;
		
		private EntityRef<Pracownik> _Pracownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReklamacjaIDChanging(int value);
    partial void OnReklamacjaIDChanged();
    partial void OnDataWystawieniaChanging(System.DateTime value);
    partial void OnDataWystawieniaChanged();
    partial void OnTrescChanging(string value);
    partial void OnTrescChanged();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    #endregion
		
		public Reklamacja()
		{
			this._Klient = default(EntityRef<Klient>);
			this._Pracownik = default(EntityRef<Pracownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReklamacjaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReklamacjaID
		{
			get
			{
				return this._ReklamacjaID;
			}
			set
			{
				if ((this._ReklamacjaID != value))
				{
					this.OnReklamacjaIDChanging(value);
					this.SendPropertyChanging();
					this._ReklamacjaID = value;
					this.SendPropertyChanged("ReklamacjaID");
					this.OnReklamacjaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataWystawienia", DbType="Date NOT NULL")]
		public System.DateTime DataWystawienia
		{
			get
			{
				return this._DataWystawienia;
			}
			set
			{
				if ((this._DataWystawienia != value))
				{
					this.OnDataWystawieniaChanging(value);
					this.SendPropertyChanging();
					this._DataWystawienia = value;
					this.SendPropertyChanged("DataWystawienia");
					this.OnDataWystawieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tresc", DbType="VarChar(150)")]
		public string Tresc
		{
			get
			{
				return this._Tresc;
			}
			set
			{
				if ((this._Tresc != value))
				{
					this.OnTrescChanging(value);
					this.SendPropertyChanging();
					this._Tresc = value;
					this.SendPropertyChanged("Tresc");
					this.OnTrescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL")]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", DbType="Int NOT NULL")]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Reklamacja", Storage="_Klient", ThisKey="KlientID", OtherKey="KlientID", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Reklamacjas.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Reklamacjas.Add(this);
						this._KlientID = value.KlientID;
					}
					else
					{
						this._KlientID = default(int);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Reklamacja", Storage="_Pracownik", ThisKey="PracownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.Reklamacjas.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.Reklamacjas.Add(this);
						this._PracownikID = value.PracownikID;
					}
					else
					{
						this._PracownikID = default(int);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReklamaZBranzy")]
	public partial class ReklamaZBranzy
	{
		
		private int _ReklamaID;
		
		private int _BranzaID;
		
		public ReklamaZBranzy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReklamaID", DbType="Int NOT NULL")]
		public int ReklamaID
		{
			get
			{
				return this._ReklamaID;
			}
			set
			{
				if ((this._ReklamaID != value))
				{
					this._ReklamaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranzaID", DbType="Int NOT NULL")]
		public int BranzaID
		{
			get
			{
				return this._BranzaID;
			}
			set
			{
				if ((this._BranzaID != value))
				{
					this._BranzaID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sklad")]
	public partial class Sklad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkladID;
		
		private int _ZespolID;
		
		private EntitySet<PracownikWSkladzie> _PracownikWSkladzies;
		
		private EntityRef<Zespol> _Zespol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkladIDChanging(int value);
    partial void OnSkladIDChanged();
    partial void OnZespolIDChanging(int value);
    partial void OnZespolIDChanged();
    #endregion
		
		public Sklad()
		{
			this._PracownikWSkladzies = new EntitySet<PracownikWSkladzie>(new Action<PracownikWSkladzie>(this.attach_PracownikWSkladzies), new Action<PracownikWSkladzie>(this.detach_PracownikWSkladzies));
			this._Zespol = default(EntityRef<Zespol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkladID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkladID
		{
			get
			{
				return this._SkladID;
			}
			set
			{
				if ((this._SkladID != value))
				{
					this.OnSkladIDChanging(value);
					this.SendPropertyChanging();
					this._SkladID = value;
					this.SendPropertyChanged("SkladID");
					this.OnSkladIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZespolID", DbType="Int NOT NULL")]
		public int ZespolID
		{
			get
			{
				return this._ZespolID;
			}
			set
			{
				if ((this._ZespolID != value))
				{
					if (this._Zespol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZespolIDChanging(value);
					this.SendPropertyChanging();
					this._ZespolID = value;
					this.SendPropertyChanged("ZespolID");
					this.OnZespolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sklad_PracownikWSkladzie", Storage="_PracownikWSkladzies", ThisKey="SkladID", OtherKey="SkladID")]
		public EntitySet<PracownikWSkladzie> PracownikWSkladzies
		{
			get
			{
				return this._PracownikWSkladzies;
			}
			set
			{
				this._PracownikWSkladzies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zespol_Sklad", Storage="_Zespol", ThisKey="ZespolID", OtherKey="ZespolID", IsForeignKey=true)]
		public Zespol Zespol
		{
			get
			{
				return this._Zespol.Entity;
			}
			set
			{
				Zespol previousValue = this._Zespol.Entity;
				if (((previousValue != value) 
							|| (this._Zespol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zespol.Entity = null;
						previousValue.Sklads.Remove(this);
					}
					this._Zespol.Entity = value;
					if ((value != null))
					{
						value.Sklads.Add(this);
						this._ZespolID = value.ZespolID;
					}
					else
					{
						this._ZespolID = default(int);
					}
					this.SendPropertyChanged("Zespol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PracownikWSkladzies(PracownikWSkladzie entity)
		{
			this.SendPropertyChanging();
			entity.Sklad = this;
		}
		
		private void detach_PracownikWSkladzies(PracownikWSkladzie entity)
		{
			this.SendPropertyChanging();
			entity.Sklad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SlupOgloszeniowy")]
	public partial class SlupOgloszeniowy
	{
		
		private int _LokalizacjaID;
		
		private decimal _SzerokoscGeograficzna;
		
		private decimal _DlugoscGeograficzna;
		
		private System.Nullable<int> _IloscReklam;
		
		public SlupOgloszeniowy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", DbType="Int NOT NULL")]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					this._LokalizacjaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SzerokoscGeograficzna", DbType="Decimal(18,0) NOT NULL")]
		public decimal SzerokoscGeograficzna
		{
			get
			{
				return this._SzerokoscGeograficzna;
			}
			set
			{
				if ((this._SzerokoscGeograficzna != value))
				{
					this._SzerokoscGeograficzna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlugoscGeograficzna", DbType="Decimal(18,0) NOT NULL")]
		public decimal DlugoscGeograficzna
		{
			get
			{
				return this._DlugoscGeograficzna;
			}
			set
			{
				if ((this._DlugoscGeograficzna != value))
				{
					this._DlugoscGeograficzna = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IloscReklam", DbType="Int")]
		public System.Nullable<int> IloscReklam
		{
			get
			{
				return this._IloscReklam;
			}
			set
			{
				if ((this._IloscReklam != value))
				{
					this._IloscReklam = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tramwaj")]
	public partial class Tramwaj
	{
		
		private int _LokalizacjaID;
		
		private string _Linia;
		
		private string _Trasa;
		
		public Tramwaj()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", DbType="Int NOT NULL")]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					this._LokalizacjaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linia", DbType="VarChar(50)")]
		public string Linia
		{
			get
			{
				return this._Linia;
			}
			set
			{
				if ((this._Linia != value))
				{
					this._Linia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trasa", DbType="VarChar(MAX)")]
		public string Trasa
		{
			get
			{
				return this._Trasa;
			}
			set
			{
				if ((this._Trasa != value))
				{
					this._Trasa = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zespol")]
	public partial class Zespol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZespolID;
		
		private int _KierownikID;
		
		private EntitySet<Sklad> _Sklads;
		
		private EntitySet<Realizacja> _Realizacjas;
		
		private EntityRef<Pracownik> _Pracownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZespolIDChanging(int value);
    partial void OnZespolIDChanged();
    partial void OnKierownikIDChanging(int value);
    partial void OnKierownikIDChanged();
    #endregion
		
		public Zespol()
		{
			this._Sklads = new EntitySet<Sklad>(new Action<Sklad>(this.attach_Sklads), new Action<Sklad>(this.detach_Sklads));
			this._Realizacjas = new EntitySet<Realizacja>(new Action<Realizacja>(this.attach_Realizacjas), new Action<Realizacja>(this.detach_Realizacjas));
			this._Pracownik = default(EntityRef<Pracownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZespolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ZespolID
		{
			get
			{
				return this._ZespolID;
			}
			set
			{
				if ((this._ZespolID != value))
				{
					this.OnZespolIDChanging(value);
					this.SendPropertyChanging();
					this._ZespolID = value;
					this.SendPropertyChanged("ZespolID");
					this.OnZespolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KierownikID", DbType="Int NOT NULL")]
		public int KierownikID
		{
			get
			{
				return this._KierownikID;
			}
			set
			{
				if ((this._KierownikID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKierownikIDChanging(value);
					this.SendPropertyChanging();
					this._KierownikID = value;
					this.SendPropertyChanged("KierownikID");
					this.OnKierownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zespol_Sklad", Storage="_Sklads", ThisKey="ZespolID", OtherKey="ZespolID")]
		public EntitySet<Sklad> Sklads
		{
			get
			{
				return this._Sklads;
			}
			set
			{
				this._Sklads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zespol_Realizacja", Storage="_Realizacjas", ThisKey="ZespolID", OtherKey="ZespolID")]
		public EntitySet<Realizacja> Realizacjas
		{
			get
			{
				return this._Realizacjas;
			}
			set
			{
				this._Realizacjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Zespol", Storage="_Pracownik", ThisKey="KierownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.Zespols.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.Zespols.Add(this);
						this._KierownikID = value.PracownikID;
					}
					else
					{
						this._KierownikID = default(int);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sklads(Sklad entity)
		{
			this.SendPropertyChanging();
			entity.Zespol = this;
		}
		
		private void detach_Sklads(Sklad entity)
		{
			this.SendPropertyChanging();
			entity.Zespol = null;
		}
		
		private void attach_Realizacjas(Realizacja entity)
		{
			this.SendPropertyChanging();
			entity.Zespol = this;
		}
		
		private void detach_Realizacjas(Realizacja entity)
		{
			this.SendPropertyChanging();
			entity.Zespol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZleceniaNaFakturze")]
	public partial class ZleceniaNaFakturze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FakturaID;
		
		private int _ZlecenieID;
		
		private EntityRef<Faktura> _Faktura;
		
		private EntityRef<Zlecenie> _Zlecenie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFakturaIDChanging(int value);
    partial void OnFakturaIDChanged();
    partial void OnZlecenieIDChanging(int value);
    partial void OnZlecenieIDChanged();
    #endregion
		
		public ZleceniaNaFakturze()
		{
			this._Faktura = default(EntityRef<Faktura>);
			this._Zlecenie = default(EntityRef<Zlecenie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FakturaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FakturaID
		{
			get
			{
				return this._FakturaID;
			}
			set
			{
				if ((this._FakturaID != value))
				{
					if (this._Faktura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFakturaIDChanging(value);
					this.SendPropertyChanging();
					this._FakturaID = value;
					this.SendPropertyChanged("FakturaID");
					this.OnFakturaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZlecenieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ZlecenieID
		{
			get
			{
				return this._ZlecenieID;
			}
			set
			{
				if ((this._ZlecenieID != value))
				{
					if (this._Zlecenie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZlecenieIDChanging(value);
					this.SendPropertyChanging();
					this._ZlecenieID = value;
					this.SendPropertyChanged("ZlecenieID");
					this.OnZlecenieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faktura_ZleceniaNaFakturze", Storage="_Faktura", ThisKey="FakturaID", OtherKey="FakturaID", IsForeignKey=true)]
		public Faktura Faktura
		{
			get
			{
				return this._Faktura.Entity;
			}
			set
			{
				Faktura previousValue = this._Faktura.Entity;
				if (((previousValue != value) 
							|| (this._Faktura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faktura.Entity = null;
						previousValue.ZleceniaNaFakturzes.Remove(this);
					}
					this._Faktura.Entity = value;
					if ((value != null))
					{
						value.ZleceniaNaFakturzes.Add(this);
						this._FakturaID = value.FakturaID;
					}
					else
					{
						this._FakturaID = default(int);
					}
					this.SendPropertyChanged("Faktura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zlecenie_ZleceniaNaFakturze", Storage="_Zlecenie", ThisKey="ZlecenieID", OtherKey="ZlecenieID", IsForeignKey=true)]
		public Zlecenie Zlecenie
		{
			get
			{
				return this._Zlecenie.Entity;
			}
			set
			{
				Zlecenie previousValue = this._Zlecenie.Entity;
				if (((previousValue != value) 
							|| (this._Zlecenie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zlecenie.Entity = null;
						previousValue.ZleceniaNaFakturzes.Remove(this);
					}
					this._Zlecenie.Entity = value;
					if ((value != null))
					{
						value.ZleceniaNaFakturzes.Add(this);
						this._ZlecenieID = value.ZlecenieID;
					}
					else
					{
						this._ZlecenieID = default(int);
					}
					this.SendPropertyChanged("Zlecenie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zlecenie")]
	public partial class Zlecenie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZlecenieID;
		
		private int _PracownikID;
		
		private int _KlientID;
		
		private int _ReklamaID;
		
		private System.DateTime _TerminRozpoczecia;
		
		private System.DateTime _TerminZakonczenia;
		
		private string _StanZlecenia;
		
		private EntitySet<ZleceniaNaFakturze> _ZleceniaNaFakturzes;
		
		private EntityRef<Klient> _Klient;
		
		private EntityRef<Pracownik> _Pracownik;
		
		private EntityRef<Reklama> _Reklama;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZlecenieIDChanging(int value);
    partial void OnZlecenieIDChanged();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    partial void OnReklamaIDChanging(int value);
    partial void OnReklamaIDChanged();
    partial void OnTerminRozpoczeciaChanging(System.DateTime value);
    partial void OnTerminRozpoczeciaChanged();
    partial void OnTerminZakonczeniaChanging(System.DateTime value);
    partial void OnTerminZakonczeniaChanged();
    partial void OnStanZleceniaChanging(string value);
    partial void OnStanZleceniaChanged();
    #endregion
		
		public Zlecenie()
		{
			this._ZleceniaNaFakturzes = new EntitySet<ZleceniaNaFakturze>(new Action<ZleceniaNaFakturze>(this.attach_ZleceniaNaFakturzes), new Action<ZleceniaNaFakturze>(this.detach_ZleceniaNaFakturzes));
			this._Klient = default(EntityRef<Klient>);
			this._Pracownik = default(EntityRef<Pracownik>);
			this._Reklama = default(EntityRef<Reklama>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZlecenieID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ZlecenieID
		{
			get
			{
				return this._ZlecenieID;
			}
			set
			{
				if ((this._ZlecenieID != value))
				{
					this.OnZlecenieIDChanging(value);
					this.SendPropertyChanging();
					this._ZlecenieID = value;
					this.SendPropertyChanged("ZlecenieID");
					this.OnZlecenieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL")]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if (this._Pracownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", DbType="Int NOT NULL")]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReklamaID", DbType="Int NOT NULL")]
		public int ReklamaID
		{
			get
			{
				return this._ReklamaID;
			}
			set
			{
				if ((this._ReklamaID != value))
				{
					if (this._Reklama.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReklamaIDChanging(value);
					this.SendPropertyChanging();
					this._ReklamaID = value;
					this.SendPropertyChanged("ReklamaID");
					this.OnReklamaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminRozpoczecia", DbType="Date NOT NULL")]
		public System.DateTime TerminRozpoczecia
		{
			get
			{
				return this._TerminRozpoczecia;
			}
			set
			{
				if ((this._TerminRozpoczecia != value))
				{
					this.OnTerminRozpoczeciaChanging(value);
					this.SendPropertyChanging();
					this._TerminRozpoczecia = value;
					this.SendPropertyChanged("TerminRozpoczecia");
					this.OnTerminRozpoczeciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminZakonczenia", DbType="Date NOT NULL")]
		public System.DateTime TerminZakonczenia
		{
			get
			{
				return this._TerminZakonczenia;
			}
			set
			{
				if ((this._TerminZakonczenia != value))
				{
					this.OnTerminZakonczeniaChanging(value);
					this.SendPropertyChanging();
					this._TerminZakonczenia = value;
					this.SendPropertyChanged("TerminZakonczenia");
					this.OnTerminZakonczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StanZlecenia", DbType="VarChar(30)")]
		public string StanZlecenia
		{
			get
			{
				return this._StanZlecenia;
			}
			set
			{
				if ((this._StanZlecenia != value))
				{
					this.OnStanZleceniaChanging(value);
					this.SendPropertyChanging();
					this._StanZlecenia = value;
					this.SendPropertyChanged("StanZlecenia");
					this.OnStanZleceniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zlecenie_ZleceniaNaFakturze", Storage="_ZleceniaNaFakturzes", ThisKey="ZlecenieID", OtherKey="ZlecenieID")]
		public EntitySet<ZleceniaNaFakturze> ZleceniaNaFakturzes
		{
			get
			{
				return this._ZleceniaNaFakturzes;
			}
			set
			{
				this._ZleceniaNaFakturzes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zlecenie", Storage="_Klient", ThisKey="KlientID", OtherKey="KlientID", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Zlecenies.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Zlecenies.Add(this);
						this._KlientID = value.KlientID;
					}
					else
					{
						this._KlientID = default(int);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownik_Zlecenie", Storage="_Pracownik", ThisKey="PracownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownik Pracownik
		{
			get
			{
				return this._Pracownik.Entity;
			}
			set
			{
				Pracownik previousValue = this._Pracownik.Entity;
				if (((previousValue != value) 
							|| (this._Pracownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownik.Entity = null;
						previousValue.Zlecenies.Remove(this);
					}
					this._Pracownik.Entity = value;
					if ((value != null))
					{
						value.Zlecenies.Add(this);
						this._PracownikID = value.PracownikID;
					}
					else
					{
						this._PracownikID = default(int);
					}
					this.SendPropertyChanged("Pracownik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reklama_Zlecenie", Storage="_Reklama", ThisKey="ReklamaID", OtherKey="ReklamaID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Reklama Reklama
		{
			get
			{
				return this._Reklama.Entity;
			}
			set
			{
				Reklama previousValue = this._Reklama.Entity;
				if (((previousValue != value) 
							|| (this._Reklama.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reklama.Entity = null;
						previousValue.Zlecenies.Remove(this);
					}
					this._Reklama.Entity = value;
					if ((value != null))
					{
						value.Zlecenies.Add(this);
						this._ReklamaID = value.ReklamaID;
					}
					else
					{
						this._ReklamaID = default(int);
					}
					this.SendPropertyChanged("Reklama");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZleceniaNaFakturzes(ZleceniaNaFakturze entity)
		{
			this.SendPropertyChanging();
			entity.Zlecenie = this;
		}
		
		private void detach_ZleceniaNaFakturzes(ZleceniaNaFakturze entity)
		{
			this.SendPropertyChanging();
			entity.Zlecenie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Realizacja")]
	public partial class Realizacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealizacjaID;
		
		private int _ReklamaID;
		
		private int _ZespolID;
		
		private EntitySet<RealizacjaWLokalizacji> _RealizacjaWLokalizacjis;
		
		private EntityRef<Zespol> _Zespol;
		
		private EntityRef<Reklama> _Reklama;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealizacjaIDChanging(int value);
    partial void OnRealizacjaIDChanged();
    partial void OnReklamaIDChanging(int value);
    partial void OnReklamaIDChanged();
    partial void OnZespolIDChanging(int value);
    partial void OnZespolIDChanged();
    #endregion
		
		public Realizacja()
		{
			this._RealizacjaWLokalizacjis = new EntitySet<RealizacjaWLokalizacji>(new Action<RealizacjaWLokalizacji>(this.attach_RealizacjaWLokalizacjis), new Action<RealizacjaWLokalizacji>(this.detach_RealizacjaWLokalizacjis));
			this._Zespol = default(EntityRef<Zespol>);
			this._Reklama = default(EntityRef<Reklama>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealizacjaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RealizacjaID
		{
			get
			{
				return this._RealizacjaID;
			}
			set
			{
				if ((this._RealizacjaID != value))
				{
					this.OnRealizacjaIDChanging(value);
					this.SendPropertyChanging();
					this._RealizacjaID = value;
					this.SendPropertyChanged("RealizacjaID");
					this.OnRealizacjaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReklamaID", DbType="Int NOT NULL")]
		public int ReklamaID
		{
			get
			{
				return this._ReklamaID;
			}
			set
			{
				if ((this._ReklamaID != value))
				{
					if (this._Reklama.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReklamaIDChanging(value);
					this.SendPropertyChanging();
					this._ReklamaID = value;
					this.SendPropertyChanged("ReklamaID");
					this.OnReklamaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZespolID", DbType="Int NOT NULL")]
		public int ZespolID
		{
			get
			{
				return this._ZespolID;
			}
			set
			{
				if ((this._ZespolID != value))
				{
					if (this._Zespol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZespolIDChanging(value);
					this.SendPropertyChanging();
					this._ZespolID = value;
					this.SendPropertyChanged("ZespolID");
					this.OnZespolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Realizacja_RealizacjaWLokalizacji", Storage="_RealizacjaWLokalizacjis", ThisKey="RealizacjaID", OtherKey="RealizacjaID")]
		public EntitySet<RealizacjaWLokalizacji> RealizacjaWLokalizacjis
		{
			get
			{
				return this._RealizacjaWLokalizacjis;
			}
			set
			{
				this._RealizacjaWLokalizacjis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zespol_Realizacja", Storage="_Zespol", ThisKey="ZespolID", OtherKey="ZespolID", IsForeignKey=true)]
		public Zespol Zespol
		{
			get
			{
				return this._Zespol.Entity;
			}
			set
			{
				Zespol previousValue = this._Zespol.Entity;
				if (((previousValue != value) 
							|| (this._Zespol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zespol.Entity = null;
						previousValue.Realizacjas.Remove(this);
					}
					this._Zespol.Entity = value;
					if ((value != null))
					{
						value.Realizacjas.Add(this);
						this._ZespolID = value.ZespolID;
					}
					else
					{
						this._ZespolID = default(int);
					}
					this.SendPropertyChanged("Zespol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reklama_Realizacja", Storage="_Reklama", ThisKey="ReklamaID", OtherKey="ReklamaID", IsForeignKey=true)]
		public Reklama Reklama
		{
			get
			{
				return this._Reklama.Entity;
			}
			set
			{
				Reklama previousValue = this._Reklama.Entity;
				if (((previousValue != value) 
							|| (this._Reklama.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reklama.Entity = null;
						previousValue.Realizacjas.Remove(this);
					}
					this._Reklama.Entity = value;
					if ((value != null))
					{
						value.Realizacjas.Add(this);
						this._ReklamaID = value.ReklamaID;
					}
					else
					{
						this._ReklamaID = default(int);
					}
					this.SendPropertyChanged("Reklama");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RealizacjaWLokalizacjis(RealizacjaWLokalizacji entity)
		{
			this.SendPropertyChanging();
			entity.Realizacja = this;
		}
		
		private void detach_RealizacjaWLokalizacjis(RealizacjaWLokalizacji entity)
		{
			this.SendPropertyChanging();
			entity.Realizacja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lokalizacja")]
	public partial class Lokalizacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LokalizacjaID;
		
		private string _Opis;
		
		private string _NIP;
		
		private decimal _Wysokosc;
		
		private decimal _Szerokosc;
		
		private string _Zawartosc;
		
		private decimal _WolneMiejsce;
		
		private EntitySet<RealizacjaWLokalizacji> _RealizacjaWLokalizacjis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLokalizacjaIDChanging(int value);
    partial void OnLokalizacjaIDChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnNIPChanging(string value);
    partial void OnNIPChanged();
    partial void OnWysokoscChanging(decimal value);
    partial void OnWysokoscChanged();
    partial void OnSzerokoscChanging(decimal value);
    partial void OnSzerokoscChanged();
    partial void OnZawartoscChanging(string value);
    partial void OnZawartoscChanged();
    partial void OnWolneMiejsceChanging(decimal value);
    partial void OnWolneMiejsceChanged();
    #endregion
		
		public Lokalizacja()
		{
			this._RealizacjaWLokalizacjis = new EntitySet<RealizacjaWLokalizacji>(new Action<RealizacjaWLokalizacji>(this.attach_RealizacjaWLokalizacjis), new Action<RealizacjaWLokalizacji>(this.detach_RealizacjaWLokalizacjis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokalizacjaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LokalizacjaID
		{
			get
			{
				return this._LokalizacjaID;
			}
			set
			{
				if ((this._LokalizacjaID != value))
				{
					this.OnLokalizacjaIDChanging(value);
					this.SendPropertyChanging();
					this._LokalizacjaID = value;
					this.SendPropertyChanged("LokalizacjaID");
					this.OnLokalizacjaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="VarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIP", DbType="VarChar(15)")]
		public string NIP
		{
			get
			{
				return this._NIP;
			}
			set
			{
				if ((this._NIP != value))
				{
					this.OnNIPChanging(value);
					this.SendPropertyChanging();
					this._NIP = value;
					this.SendPropertyChanged("NIP");
					this.OnNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wysokosc", DbType="Decimal(18,0) NOT NULL")]
		public decimal Wysokosc
		{
			get
			{
				return this._Wysokosc;
			}
			set
			{
				if ((this._Wysokosc != value))
				{
					this.OnWysokoscChanging(value);
					this.SendPropertyChanging();
					this._Wysokosc = value;
					this.SendPropertyChanged("Wysokosc");
					this.OnWysokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Szerokosc", DbType="Decimal(18,0) NOT NULL")]
		public decimal Szerokosc
		{
			get
			{
				return this._Szerokosc;
			}
			set
			{
				if ((this._Szerokosc != value))
				{
					this.OnSzerokoscChanging(value);
					this.SendPropertyChanging();
					this._Szerokosc = value;
					this.SendPropertyChanged("Szerokosc");
					this.OnSzerokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zawartosc", DbType="VarChar(MAX)")]
		public string Zawartosc
		{
			get
			{
				return this._Zawartosc;
			}
			set
			{
				if ((this._Zawartosc != value))
				{
					this.OnZawartoscChanging(value);
					this.SendPropertyChanging();
					this._Zawartosc = value;
					this.SendPropertyChanged("Zawartosc");
					this.OnZawartoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WolneMiejsce", DbType="Decimal(18,0) NOT NULL")]
		public decimal WolneMiejsce
		{
			get
			{
				return this._WolneMiejsce;
			}
			set
			{
				if ((this._WolneMiejsce != value))
				{
					this.OnWolneMiejsceChanging(value);
					this.SendPropertyChanging();
					this._WolneMiejsce = value;
					this.SendPropertyChanged("WolneMiejsce");
					this.OnWolneMiejsceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokalizacja_RealizacjaWLokalizacji", Storage="_RealizacjaWLokalizacjis", ThisKey="LokalizacjaID", OtherKey="LokalizacjaID")]
		public EntitySet<RealizacjaWLokalizacji> RealizacjaWLokalizacjis
		{
			get
			{
				return this._RealizacjaWLokalizacjis;
			}
			set
			{
				this._RealizacjaWLokalizacjis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RealizacjaWLokalizacjis(RealizacjaWLokalizacji entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = this;
		}
		
		private void detach_RealizacjaWLokalizacjis(RealizacjaWLokalizacji entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reklama")]
	public partial class Reklama : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReklamaID;
		
		private string _Opis;
		
		private decimal _Wysokosc;
		
		private decimal _Szerokosc;
		
		private EntitySet<Zlecenie> _Zlecenies;
		
		private EntitySet<Realizacja> _Realizacjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReklamaIDChanging(int value);
    partial void OnReklamaIDChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnWysokoscChanging(decimal value);
    partial void OnWysokoscChanged();
    partial void OnSzerokoscChanging(decimal value);
    partial void OnSzerokoscChanged();
    #endregion
		
		public Reklama()
		{
			this._Zlecenies = new EntitySet<Zlecenie>(new Action<Zlecenie>(this.attach_Zlecenies), new Action<Zlecenie>(this.detach_Zlecenies));
			this._Realizacjas = new EntitySet<Realizacja>(new Action<Realizacja>(this.attach_Realizacjas), new Action<Realizacja>(this.detach_Realizacjas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReklamaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReklamaID
		{
			get
			{
				return this._ReklamaID;
			}
			set
			{
				if ((this._ReklamaID != value))
				{
					this.OnReklamaIDChanging(value);
					this.SendPropertyChanging();
					this._ReklamaID = value;
					this.SendPropertyChanged("ReklamaID");
					this.OnReklamaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wysokosc", DbType="Decimal(18,0) NOT NULL")]
		public decimal Wysokosc
		{
			get
			{
				return this._Wysokosc;
			}
			set
			{
				if ((this._Wysokosc != value))
				{
					this.OnWysokoscChanging(value);
					this.SendPropertyChanging();
					this._Wysokosc = value;
					this.SendPropertyChanged("Wysokosc");
					this.OnWysokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Szerokosc", DbType="Decimal(18,0) NOT NULL")]
		public decimal Szerokosc
		{
			get
			{
				return this._Szerokosc;
			}
			set
			{
				if ((this._Szerokosc != value))
				{
					this.OnSzerokoscChanging(value);
					this.SendPropertyChanging();
					this._Szerokosc = value;
					this.SendPropertyChanged("Szerokosc");
					this.OnSzerokoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reklama_Zlecenie", Storage="_Zlecenies", ThisKey="ReklamaID", OtherKey="ReklamaID")]
		public EntitySet<Zlecenie> Zlecenies
		{
			get
			{
				return this._Zlecenies;
			}
			set
			{
				this._Zlecenies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reklama_Realizacja", Storage="_Realizacjas", ThisKey="ReklamaID", OtherKey="ReklamaID")]
		public EntitySet<Realizacja> Realizacjas
		{
			get
			{
				return this._Realizacjas;
			}
			set
			{
				this._Realizacjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zlecenies(Zlecenie entity)
		{
			this.SendPropertyChanging();
			entity.Reklama = this;
		}
		
		private void detach_Zlecenies(Zlecenie entity)
		{
			this.SendPropertyChanging();
			entity.Reklama = null;
		}
		
		private void attach_Realizacjas(Realizacja entity)
		{
			this.SendPropertyChanging();
			entity.Reklama = this;
		}
		
		private void detach_Realizacjas(Realizacja entity)
		{
			this.SendPropertyChanging();
			entity.Reklama = null;
		}
	}
}
#pragma warning restore 1591
